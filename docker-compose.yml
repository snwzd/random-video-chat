version: '3.8'

services:
  traefik:
    image: docker.io/library/traefik:v2.5
    command:
      - --providers.docker=true
      - --providers.docker.network=proxy
      - --entrypoints.web.address=:5500
      - --api.insecure=true
    ports:
      - "5500:5500"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#      - /run/user/1000/podman/podman.sock:/var/run/docker.sock # for podman
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.rateLimiter.ratelimit.average=100
      - traefik.http.middlewares.rateLimiter.ratelimit.burst=50
    networks:
      - internal

  prometheus:
    image: docker.io/prom/prometheus:v2.52.0
    volumes:
      - "./prometheus:/etc/prometheus"
    networks:
      - internal
    ports:
      - "9090:9090"

  grafana:
    image: docker.io/grafana/grafana:10.1.10
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

  redis:
    image: docker.io/library/redis:7
    container_name: redis
    networks:
      - internal

  user:
    image: docker.io/notmde/rvc-user:56e7ffb5c72254f86446a03b27901b3663f42e26
    container_name: user-service
    depends_on:
      - redis
    environment:
      - REDIS_URI=redis://redis:6379
      - USER_SERVICE_PORT=5000
      - TURN_URL=
      - TURN_USERNAME=
      - TURN_CRED=
      - SESSION_KEY=secret
      - SECURE_FLAG=0
      - SKIP_DOTENV=1
    labels:
      - traefik.enable=true
      - traefik.http.services.user-service.loadbalancer.server.port=5000
      - traefik.http.routers.userHomeRouter.rule=Path(`/`)
      - traefik.http.routers.userHomeRouter.middlewares=rateLimiter
      - traefik.http.routers.userRegisterRouter.rule=Path(`/register`)
      - traefik.http.routers.userRegisterRouter.middlewares=rateLimiter
      - traefik.http.routers.userMatchRouter.rule=Path(`/match`)
      - traefik.http.routers.userMatchRouter.middlewares=rateLimiter
      - traefik.http.routers.userConnWSRouter.rule=PathPrefix(`/connection/`)
      - traefik.http.routers.userConnWSRouter.middlewares=rateLimiter
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "-S", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - internal

  session:
    image: docker.io/notmde/rvc-session:280e22538f6a959a20e409603c09cbcf053341db
    container_name: session-service
    depends_on:
      - redis
    environment:
      - REDIS_URI=redis://redis:6379
      - SESSION_SERVICE_PORT=5001
      - SKIP_DOTENV=1
    labels:
      - traefik.enable=false
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "-S", "http://localhost:5001/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - internal

networks:
  internal:
    driver: bridge